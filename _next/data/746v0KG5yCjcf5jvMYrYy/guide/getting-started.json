{"pageProps":{"toc":[{"$schema":"../../schemas/content-group.json","title":"Guide","pathPrefix":"guide","order":0,"items":[{"title":"Introduction","route":"guide/introduction","order":0},{"title":"Getting Started","route":"guide/getting-started","order":1},{"title":"Ethereum Provider API","route":"guide/ethereum-provider","order":2}]},{"$schema":"../../schemas/content-group.json","title":"Mobile","pathPrefix":"mobile","order":1,"items":[{"title":"Introduction","route":"mobile/introduction","order":0}]}],"page":{"slug":["guide","getting-started"],"path":"content/guide/getting-started.mdx","route":"guide/getting-started","meta":{"title":"Getting Started","order":1},"content":"\nTo develop for MetaMask, install MetaMask in the browser of your choice on your development machine. [Download here](https://metamask.io/).\n\n<Warning title=\"A quick note\">\nThis guide assumes intermediate knowledge of HTML, CSS, and JavaScript.\n</Warning>\n\nOnce MetaMask is installed and running (make sure you back up your Secret Recovery Phrase), you should find that new browser tabs have a `window.ethereum` object available in the developer console.\nThis is how your website will interact with MetaMask.\n\nYou can review the full API for that object [here](./ethereum-provider.html).\nNote that **over the course of 2020**, we introduced significant changes to this API, and we recommend that you refer to its documentation.\n\n## Basic Considerations\n\n### Web3 Browser Detection\n\nTo verify if the browser is running MetaMask, copy and paste the code snippet below in the developer console of your web browser:\n\n<button className=\"enableEthereumButton btn\">Enable Ethereum</button>\n<button disabled className=\"sendEthButton btn\">Send Eth</button>\n\n```javascript-autorun\nif (typeof window.ethereum !== 'undefined') {\n  const ethereumButton = document.querySelector('.enableEthereumButton');\n  const sendEthButton = document.querySelector('.sendEthButton');\n\n  let accounts = [];\n\n  //Sending Ethereum to an address\n  sendEthButton.addEventListener('click', () => {\n    ethereum.request({\n      method: 'eth_sendTransaction',\n      params: [{\n        from: accounts[0],\n        to: '0x2f318C334780961FB129D2a6c30D0763d9a5C970',\n        value: '0x29a2241af62c0000',\n        gasPrice: '0x09184e72a000',\n        gas: '0x2710',\n      }],\n    })\n      .then((txHash) => console.log(txHash))\n      .catch(console.error);\n  });\n\n  ethereumButton.addEventListener('click', async () => {\n    await getAccount();\n    sendEthButton.disabled = false;\n    ethereumButton.disabled = true;\n  });\n\n  async function getAccount() {\n    accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n  }\n}\n```\n\nYou can review the full API for the `window.ethereum` object [here](./ethereum-provider.html).\n"},"serializedPage":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    strong: \"strong\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components), {Warning} = _components;\n  if (!Warning) _missingMdxReference(\"Warning\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"To develop for MetaMask, install MetaMask in the browser of your choice on your development machine. \", _jsx(_components.a, {\n        href: \"https://metamask.io/\",\n        children: \"Download here\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Warning, {\n      title: \"A quick note\",\n      children: _jsx(_components.p, {\n        children: \"This guide assumes intermediate knowledge of HTML, CSS, and JavaScript.\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Once MetaMask is installed and running (make sure you back up your Secret Recovery Phrase), you should find that new browser tabs have a \", _jsx(_components.code, {\n        children: \"window.ethereum\"\n      }), \" object available in the developer console.\\nThis is how your website will interact with MetaMask.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can review the full API for that object \", _jsx(_components.a, {\n        href: \"./ethereum-provider.html\",\n        children: \"here\"\n      }), \".\\nNote that \", _jsx(_components.strong, {\n        children: \"over the course of 2020\"\n      }), \", we introduced significant changes to this API, and we recommend that you refer to its documentation.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Basic Considerations\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Web3 Browser Detection\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To verify if the browser is running MetaMask, copy and paste the code snippet below in the developer console of your web browser:\"\n    }), \"\\n\", _jsx(\"button\", {\n      className: \"enableEthereumButton btn\",\n      children: \"Enable Ethereum\"\n    }), \"\\n\", \"\\n\", \"\\n\", _jsx(\"button\", {\n      disabled: true,\n      className: \"sendEthButton btn\",\n      children: \"Send Eth\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-javascript-autorun\",\n        children: \"if (typeof window.ethereum !== 'undefined') {\\n  const ethereumButton = document.querySelector('.enableEthereumButton');\\n  const sendEthButton = document.querySelector('.sendEthButton');\\n\\n  let accounts = [];\\n\\n  //Sending Ethereum to an address\\n  sendEthButton.addEventListener('click', () => {\\n    ethereum.request({\\n      method: 'eth_sendTransaction',\\n      params: [{\\n        from: accounts[0],\\n        to: '0x2f318C334780961FB129D2a6c30D0763d9a5C970',\\n        value: '0x29a2241af62c0000',\\n        gasPrice: '0x09184e72a000',\\n        gas: '0x2710',\\n      }],\\n    })\\n      .then((txHash) => console.log(txHash))\\n      .catch(console.error);\\n  });\\n\\n  ethereumButton.addEventListener('click', async () => {\\n    await getAccount();\\n    sendEthButton.disabled = false;\\n    ethereumButton.disabled = true;\\n  });\\n\\n  async function getAccount() {\\n    accounts = await ethereum.request({ method: 'eth_requestAccounts' });\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can review the full API for the \", _jsx(_components.code, {\n        children: \"window.ethereum\"\n      }), \" object \", _jsx(_components.a, {\n        href: \"./ethereum-provider.html\",\n        children: \"here\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"depModules":[],"codeBlockMap":{"if (typeof window.ethereum !== 'undefined') {\n  const ethereumButton = document.querySelector('.enableEthereumButton');\n  const sendEthButton = document.querySelector('.sendEthButton');\n\n  let accounts = [];\n\n  //Sending Ethereum to an address\n  sendEthButton.addEventListener('click', () => {\n    ethereum.request({\n      method: 'eth_sendTransaction',\n      params: [{\n        from: accounts[0],\n        to: '0x2f318C334780961FB129D2a6c30D0763d9a5C970',\n        value: '0x29a2241af62c0000',\n        gasPrice: '0x09184e72a000',\n        gas: '0x2710',\n      }],\n    })\n      .then((txHash) => console.log(txHash))\n      .catch(console.error);\n  });\n\n  ethereumButton.addEventListener('click', async () => {\n    await getAccount();\n    sendEthButton.disabled = false;\n    ethereumButton.disabled = true;\n  });\n\n  async function getAccount() {\n    accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n  }\n}\n":"/******/ (() => { // webpackBootstrap\nvar __webpack_exports__ = {};\nif (typeof window.ethereum !== 'undefined') {\n  const ethereumButton = document.querySelector('.enableEthereumButton');\n  const sendEthButton = document.querySelector('.sendEthButton');\n\n  let accounts = [];\n\n  //Sending Ethereum to an address\n  sendEthButton.addEventListener('click', () => {\n    ethereum.request({\n      method: 'eth_sendTransaction',\n      params: [{\n        from: accounts[0],\n        to: '0x2f318C334780961FB129D2a6c30D0763d9a5C970',\n        value: '0x29a2241af62c0000',\n        gasPrice: '0x09184e72a000',\n        gas: '0x2710',\n      }],\n    })\n      .then((txHash) => console.log(txHash))\n      .catch(console.error);\n  });\n\n  ethereumButton.addEventListener('click', async () => {\n    await getAccount();\n    sendEthButton.disabled = false;\n    ethereumButton.disabled = true;\n  });\n\n  async function getAccount() {\n    accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n  }\n}\n\n/******/ })()\n;"}},"__N_SSG":true}