{"pageProps":{"toc":[{"$schema":"../../schemas/content-group.json","title":"Guide","pathPrefix":"guide","order":0,"items":[{"title":"Introduction","slug":["guide","introduction"],"route":"guide/introduction","order":0},{"title":"Getting Started","slug":["guide","getting-started"],"route":"guide/getting-started","order":1},{"title":"Ethereum Provider API","slug":["guide","ethereum-provider"],"route":"guide/ethereum-provider","order":2}]},{"$schema":"../../schemas/content-group.json","title":"Mobile","pathPrefix":"mobile","order":1,"items":[{"title":"Introduction","slug":["mobile","introduction"],"route":"mobile/introduction","order":0}]}],"page":{"slug":["guide","introduction"],"path":"content/guide/introduction.mdx","route":"guide/introduction","meta":{"title":"Introduction","order":0},"content":"\nWelcome to MetaMask’s Developer Documentation. MetaMask is the trailblazing tool enabling user interactions and experience on Web3. It is currently available as a browser extension and as a mobile app on both Android and iOS devices. The purpose of this documentation is to illustrate how to build a dapp with MetaMask.\n\n- You can find the latest version of MetaMask on our [official website](https://metamask.io/).\n- For help using MetaMask, visit our [User Support Site](https://metamask.zendesk.com/).\n- For up to the minute news, follow our [Twitter](https://twitter.com/MetaMask) or [Medium](https://medium.com/metamask) pages.\n- To learn how to contribute to the MetaMask project itself, visit our [Internal Docs](https://github.com/MetaMask/metamask-extension/tree/develop/docs).\n\n<Tip title=\"Recent Breaking Provider Changes\">\nIf you are an Ethereum application developer and are looking for information about our January 2021 provider API changes,\nplease see our [Migration Guide](./provider-migration.html) for more details.\n</Tip>\n\n## Why MetaMask\n\nMetaMask was created to meet the needs of secure and usable Ethereum-based web sites. In particular, it handles account management and connecting the user to the blockchain.\n\n- [Get started here](./getting-started.md)\n- [Learn more about our JavaScript Provider API](./ethereum-provider.md)\n- [Learn more about our RPC API](./rpc-api.md)\n\n## Account Management\n\nMetaMask allows users to manage accounts and their keys in a variety of ways, including hardware wallets, while isolating them from the site context. This is a great security improvement over storing the user keys on a single central server, or even in local storage, which can allow for [mass account thefts](https://www.ccn.com/cryptocurrency-exchange-etherdelta-hacked-in-dns-hijacking-scheme/).\n\nThis security feature also comes with developer convenience: For developers, you simply interact with the globally available `ethereum` API that identifies the users of web3-compatible browsers (like MetaMask users), and whenever you request a transaction signature (like `eth_sendTransaction`, `eth_signTypedData`, or others), MetaMask will prompt the user in as comprehensible a way as possible. This keeps users informed, and leaves attackers only the option of trying to phish individual users, rather than performing mass hacks (although [DNS hacks can still be used for phishing en masse](https://medium.com/metamask/new-phishing-strategy-becoming-common-1b1123837168)).\n\n## Blockchain Connection\n\nMetaMask comes pre-loaded with fast connections to the Ethereum blockchain and several test networks via our friends at [Infura](https://infura.io/). This allows you to get started without synchronizing a full node, while still providing the option to upgrade your security and use the blockchain provider of your choice.\n\nToday, MetaMask is compatible with any blockchain that exposes an [Ethereum-compatible JSON RPC API](https://eth.wiki/json-rpc/API), including custom and private blockchains. For development, we recommend running a test blockchain like [Ganache](https://www.trufflesuite.com/ganache).\n\nWe are aware that there are constantly new private blockchains being created. If you are interested in integrating MetaMask with your own custom network, [we have an API that has already enabled a number of networks to do the same.](https://medium.com/metamask/connect-users-to-layer-2-networks-with-the-metamask-custom-networks-api-d0873fac51e5).\n\n## New Dapp Developers\n\n- [Learning Solidity](https://karl.tech/learning-solidity-part-1-deploy-a-contract/) by karl Floersch\n- [CryptoZombies](https://cryptozombies.io/)\n- [Getting Started with Truffle](https://www.trufflesuite.com/docs/truffle/quickstart)\n- [Keeping up with Blockchain Development (from ConsenSys Academy)](https://github.com/ConsenSys-Academy/Blockchain-Developer-Bootcamp/blob/main/docs/S00-intro/L6-keeping-up/index.md)\n- Launch into the Web3 space with [ConsenSys Academy's Blockchain Developer Bootcamp](https://consensys.net/academy/bootcamp/)\n- Explore everything ConsenSys at the [ConsenSys Developer Portal](https://consensys.net/developers/)\n"},"serializedPage":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Tip} = _components;\n  if (!Tip) _missingMdxReference(\"Tip\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Welcome to MetaMask’s Developer Documentation. MetaMask is the trailblazing tool enabling user interactions and experience on Web3. It is currently available as a browser extension and as a mobile app on both Android and iOS devices. The purpose of this documentation is to illustrate how to build a dapp with MetaMask.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"You can find the latest version of MetaMask on our \", _jsx(_components.a, {\n          href: \"https://metamask.io/\",\n          children: \"official website\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"For help using MetaMask, visit our \", _jsx(_components.a, {\n          href: \"https://metamask.zendesk.com/\",\n          children: \"User Support Site\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"For up to the minute news, follow our \", _jsx(_components.a, {\n          href: \"https://twitter.com/MetaMask\",\n          children: \"Twitter\"\n        }), \" or \", _jsx(_components.a, {\n          href: \"https://medium.com/metamask\",\n          children: \"Medium\"\n        }), \" pages.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To learn how to contribute to the MetaMask project itself, visit our \", _jsx(_components.a, {\n          href: \"https://github.com/MetaMask/metamask-extension/tree/develop/docs\",\n          children: \"Internal Docs\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Tip, {\n      title: \"Recent Breaking Provider Changes\",\n      children: _jsxs(_components.p, {\n        children: [\"If you are an Ethereum application developer and are looking for information about our January 2021 provider API changes,\\nplease see our \", _jsx(_components.a, {\n          href: \"./provider-migration.html\",\n          children: \"Migration Guide\"\n        }), \" for more details.\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Why MetaMask\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MetaMask was created to meet the needs of secure and usable Ethereum-based web sites. In particular, it handles account management and connecting the user to the blockchain.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"./getting-started.md\",\n          children: \"Get started here\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"./ethereum-provider.md\",\n          children: \"Learn more about our JavaScript Provider API\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"./rpc-api.md\",\n          children: \"Learn more about our RPC API\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Account Management\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"MetaMask allows users to manage accounts and their keys in a variety of ways, including hardware wallets, while isolating them from the site context. This is a great security improvement over storing the user keys on a single central server, or even in local storage, which can allow for \", _jsx(_components.a, {\n        href: \"https://www.ccn.com/cryptocurrency-exchange-etherdelta-hacked-in-dns-hijacking-scheme/\",\n        children: \"mass account thefts\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This security feature also comes with developer convenience: For developers, you simply interact with the globally available \", _jsx(_components.code, {\n        children: \"ethereum\"\n      }), \" API that identifies the users of web3-compatible browsers (like MetaMask users), and whenever you request a transaction signature (like \", _jsx(_components.code, {\n        children: \"eth_sendTransaction\"\n      }), \", \", _jsx(_components.code, {\n        children: \"eth_signTypedData\"\n      }), \", or others), MetaMask will prompt the user in as comprehensible a way as possible. This keeps users informed, and leaves attackers only the option of trying to phish individual users, rather than performing mass hacks (although \", _jsx(_components.a, {\n        href: \"https://medium.com/metamask/new-phishing-strategy-becoming-common-1b1123837168\",\n        children: \"DNS hacks can still be used for phishing en masse\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Blockchain Connection\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"MetaMask comes pre-loaded with fast connections to the Ethereum blockchain and several test networks via our friends at \", _jsx(_components.a, {\n        href: \"https://infura.io/\",\n        children: \"Infura\"\n      }), \". This allows you to get started without synchronizing a full node, while still providing the option to upgrade your security and use the blockchain provider of your choice.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Today, MetaMask is compatible with any blockchain that exposes an \", _jsx(_components.a, {\n        href: \"https://eth.wiki/json-rpc/API\",\n        children: \"Ethereum-compatible JSON RPC API\"\n      }), \", including custom and private blockchains. For development, we recommend running a test blockchain like \", _jsx(_components.a, {\n        href: \"https://www.trufflesuite.com/ganache\",\n        children: \"Ganache\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We are aware that there are constantly new private blockchains being created. If you are interested in integrating MetaMask with your own custom network, \", _jsx(_components.a, {\n        href: \"https://medium.com/metamask/connect-users-to-layer-2-networks-with-the-metamask-custom-networks-api-d0873fac51e5\",\n        children: \"we have an API that has already enabled a number of networks to do the same.\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"New Dapp Developers\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://karl.tech/learning-solidity-part-1-deploy-a-contract/\",\n          children: \"Learning Solidity\"\n        }), \" by karl Floersch\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://cryptozombies.io/\",\n          children: \"CryptoZombies\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://www.trufflesuite.com/docs/truffle/quickstart\",\n          children: \"Getting Started with Truffle\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/ConsenSys-Academy/Blockchain-Developer-Bootcamp/blob/main/docs/S00-intro/L6-keeping-up/index.md\",\n          children: \"Keeping up with Blockchain Development (from ConsenSys Academy)\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Launch into the Web3 space with \", _jsx(_components.a, {\n          href: \"https://consensys.net/academy/bootcamp/\",\n          children: \"ConsenSys Academy's Blockchain Developer Bootcamp\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Explore everything ConsenSys at the \", _jsx(_components.a, {\n          href: \"https://consensys.net/developers/\",\n          children: \"ConsenSys Developer Portal\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"depModules":[],"codeBlockMap":{}},"__N_SSG":true}